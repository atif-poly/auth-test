openapi: 3.0.3
info:
  title: Polymarket MFA API
  version: "1.0.0"
  description: Passkey MFA endpoints used by the iOS app.

servers:
  - url: https://mfa-server-atif.fly.dev
    description: Production
  - url: http://localhost:8080
    description: Local

tags:
  - name: MFA

paths:
  /v1/mfa/passkey/challenge:
    get:
      tags: [MFA]
      summary: Get passkey challenge
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Challenge created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMFAChallenge"
              examples:
                example:
                  value:
                    challenge: "vuSmRFxxQ1six6vvwP1xcy8G8rPjRTur1K2AvNY62A8"
                    expiresAt: "2025-08-19T19:14:14.930437635Z"
        "401":
          description: Unauthorized

  /v1/mfa/passkey/register:
    post:
      tags: [MFA]
      summary: Register a passkey
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BodyPasskeyRegister"
            examples:
              example:
                value:
                  credentialId: "cred-abc"
                  publicKey: "pk-xyz"
                  attestationObject: "base64..."
                  authenticatorData: "base64..."
      responses:
        "200":
          description: Method state after registration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMFAMethod"
              examples:
                enabled:
                  value:
                    type: "PASSKEY"
                    isEnabled: true
                    isSetup: true
                    setupTimestamp: "2025-08-19T19:12:15.061886669Z"
                    lastUsedTimestamp: "2025-08-19T19:12:15.061886669Z"
        "400":
          description: Invalid body
        "401":
          description: Unauthorized

  /v1/mfa/passkey/authenticate:
    post:
      tags: [MFA]
      summary: Authenticate with a passkey
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BodyPasskeyAuthenticate"
            examples:
              example:
                value:
                  credentialId: "cred-abc"
                  authenticatorData: "base64-auth-data"
                  signature: "base64-signature"
                  userHandle: "base64-user-handle"
                  challenge: "vuSmRFxxQ1si..."
      responses:
        "200":
          description: Method state after authentication
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseMFAMethod"
              examples:
                enabled:
                  value:
                    type: "PASSKEY"
                    isEnabled: true
                    isSetup: true
                    setupTimestamp: "2025-08-19T19:12:15.061886669Z"
                    lastUsedTimestamp: "2025-08-19T19:12:15.273704899Z"
        "400":
          description: Invalid body
        "401":
          description: Unauthorized

  /v1/mfa/status:
    get:
      tags: [MFA]
      summary: Get MFA methods status
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of methods
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResponseMFAMethod"
              examples:
                example:
                  value:
                    - type: "PASSKEY"
                      isEnabled: false
                      isSetup: false
        "401":
          description: Unauthorized

  /v1/mfa/disable/{type}:
    delete:
      tags: [MFA]
      summary: Disable an MFA method
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: type
          required: true
          schema:
            type: string
            enum: [PASSKEY]
          description: Method type to disable (case-insensitive)
      responses:
        "204":
          description: Disabled
        "401":
          description: Unauthorized
        "404":
          description: Unknown method type

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: opaque

  schemas:
    ResponseMFAChallenge:
      type: object
      properties:
        challenge:
          type: string
          description: Base64 URL-safe challenge
        expiresAt:
          type: string
          format: date-time
          description: ISO 8601 timestamp
      required: [challenge, expiresAt]

    ResponseMFAMethod:
      type: object
      properties:
        type:
          type: string
          enum: [PASSKEY]
        isEnabled:
          type: boolean
        isSetup:
          type: boolean
        setupTimestamp:
          type: string
          format: date-time
          nullable: true
        lastUsedTimestamp:
          type: string
          format: date-time
          nullable: true
      required: [type, isEnabled, isSetup]

    BodyPasskeyRegister:
      type: object
      properties:
        credentialId:
          type: string
        publicKey:
          type: string
        attestationObject:
          type: string
          nullable: true
        authenticatorData:
          type: string
          nullable: true
      required: [credentialId, publicKey]

    BodyPasskeyAuthenticate:
      type: object
      properties:
        credentialId:
          type: string
        authenticatorData:
          type: string
        signature:
          type: string
        userHandle:
          type: string
        challenge:
          type: string
      required: [credentialId, authenticatorData, signature, userHandle, challenge]